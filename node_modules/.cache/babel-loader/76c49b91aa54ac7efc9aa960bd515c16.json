{"ast":null,"code":"var _jsxFileName = \"C:\\\\home\\\\IT\\\\Python\\\\DjangoPractice\\\\front-end\\\\teach-app\\\\src\\\\containers\\\\QuestionForm.js\";\nimport React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport Hoc from \"../hoc/hoc\";\nconst FormItem = Form.Item;\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.remove = k => {\n      const form = this.props.form;\n      const keys = form.getFieldValue(\"keys\");\n      if (keys.length === 1) return;\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const form = this.props.form;\n      const keys = form.getFieldValue(\"keys\");\n      const nextKeys = keys.concat(++id);\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    getFieldDecorator(\"keys\", {\n      initialValue: []\n    });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k, index) => React.createElement(FormItem, {\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, getFieldDecorator(\"questions[\".concat(this.props.id, \"]choices[\").concat(k, \"]\"), {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input a choice to the question\"\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Answer choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), keys.length > 1 ? React.createElement(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      disabled: keys.length === 1,\n      onClick: () => this.remove(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null));\n    return React.createElement(Hoc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, getFieldDecorator(\"question[\".concat(this.props.id, \"]\"), {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        message: \"Please input a question\"\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Add a question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, getFieldDecorator(\"answers[\".concat(this.props.id, \"]\"), {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        message: \"Please input an answer to this question\"\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"What is the answer?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), formItems, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"dashed\",\n      onClick: this.add,\n      style: {\n        width: \"60%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \" Add an answer choice\")));\n  }\n\n}\n\nexport default QuestionForm;","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\containers\\QuestionForm.js"],"names":["React","Form","Input","Icon","Button","Hoc","FormItem","Item","id","QuestionForm","Component","remove","k","form","props","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","render","getFieldDecorator","initialValue","formItems","map","index","validateTrigger","rules","required","whitespace","message","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Icon, Button } from \"antd\";\r\nimport Hoc from \"../hoc/hoc\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nlet id = 0;\r\n\r\nclass QuestionForm extends React.Component {\r\n  remove = k => {\r\n    const { form } = this.props;\r\n    const keys = form.getFieldValue(\"keys\");\r\n    if (keys.length === 1) return;\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k)\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(++id);\r\n    form.setFieldsValue({\r\n      keys: nextKeys\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <FormItem key={k}>\r\n        {getFieldDecorator(`questions[${this.props.id}]choices[${k}]`, {\r\n          validateTrigger: [\"onChange\", \"onBlur\"],\r\n          rules: [\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input a choice to the question\"\r\n            }\r\n          ]\r\n        })(<Input placeholder=\"Answer choice\" />)}\r\n        {keys.length > 1 ? (\r\n          <Icon\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            disabled={keys.length === 1}\r\n            onClick={() => this.remove(k)}\r\n          />\r\n        ) : null}\r\n      </FormItem>\r\n    ));\r\n    return (\r\n      <Hoc>\r\n        <FormItem>\r\n          {getFieldDecorator(`question[${this.props.id}]`, {\r\n            validateTrigger: [\"onChange\", \"onBlur\"],\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input a question\"\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Add a question\" />)}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator(`answers[${this.props.id}]`, {\r\n            validateTrigger: [\"onChange\", \"onBlur\"],\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input an answer to this question\"\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"What is the answer?\" />)}\r\n        </FormItem>\r\n        {formItems}\r\n        <FormItem>\r\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\r\n            <Icon type=\"plus\" /> Add an answer choice\r\n          </Button>\r\n        </FormItem>\r\n      </Hoc>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n"]},"metadata":{},"sourceType":"module"}