{"ast":null,"code":"var _jsxFileName = \"C:\\\\home\\\\IT\\\\Python\\\\DjangoPractice\\\\front-end\\\\teach-app\\\\src\\\\components\\\\Upload.js\";\nimport React, { Component } from \"react\";\nimport { Upload, Button, Icon, message } from \"antd\"; // import reqwest from \"reqwest\";\n\nimport ImageUploader from \"react-images-upload\";\n\nclass UploadFile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      uploading: false\n    };\n\n    this.handleUpload = () => {\n      const fileList = this.state.fileList;\n      const formData = new FormData();\n      fileList.forEach(file => {\n        formData.append(\"files[]\", file);\n      });\n    };\n  }\n\n  // You can use any AJAX library you like\n  // reqwest({\n  //   url: \"//jsonplaceholder.typicode.com/posts/\",\n  //   method: \"post\",\n  //   processData: false,\n  //   data: formData,\n  //   success: () => {\n  //     this.setState({\n  //       fileList: [],\n  //       uploading: false\n  //     });\n  //     message.success(\"upload successfully.\");\n  //   },\n  //   error: () => {\n  //     this.setState({\n  //       uploading: false\n  //     });\n  //     message.error(\"upload failed.\");\n  //   }\n  // });\n  render() {\n    const _this$state = this.state,\n          uploading = _this$state.uploading,\n          fileList = _this$state.fileList;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.props.change,\n      imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\"],\n      maxFileSize: 5242880,\n      singleImage: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UploadFile;","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\components\\Upload.js"],"names":["React","Component","Upload","Button","Icon","message","ImageUploader","UploadFile","state","fileList","uploading","handleUpload","formData","FormData","forEach","file","append","render","props","onRemove","setState","index","indexOf","newFileList","slice","splice","beforeUpload","change"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,QAA8C,MAA9C,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACC,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCO,KADuC,GAC/B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD+B;;AAAA,SAMvCC,YANuC,GAMxB,MAAM;AAAA,YACXF,QADW,GACE,KAAKD,KADP,CACXC,QADW;AAEnB,YAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAJ,MAAAA,QAAQ,CAACK,OAAT,CAAiBC,IAAI,IAAI;AACvBH,QAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BD,IAA3B;AACD,OAFD;AAGD,KAZsC;AAAA;;AAavC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKT,KAD9B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYD,QADZ,eACYA,QADZ;AAEP,UAAMS,KAAK,GAAG;AACZC,MAAAA,QAAQ,EAAEJ,IAAI,IAAI;AAChB,aAAKK,QAAL,CAAcZ,KAAK,IAAI;AACrB,gBAAMa,KAAK,GAAGb,KAAK,CAACC,QAAN,CAAea,OAAf,CAAuBP,IAAvB,CAAd;AACA,gBAAMQ,WAAW,GAAGf,KAAK,CAACC,QAAN,CAAee,KAAf,EAApB;AACAD,UAAAA,WAAW,CAACE,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACA,iBAAO;AACLZ,YAAAA,QAAQ,EAAEc;AADL,WAAP;AAGD,SAPD;AAQD,OAVW;AAWZG,MAAAA,YAAY,EAAEX,IAAI,IAAI;AACpB,aAAKK,QAAL,CAAcZ,KAAK,KAAK;AACtBC,UAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBM,IAApB;AADY,SAAL,CAAnB;AAGA,eAAO,KAAP;AACD,OAhBW;AAiBZN,MAAAA;AAjBY,KAAd;AAoBA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,UAAU,EAAC,eAFb;AAGE,MAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWS,MAHvB;AAIE,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJhB;AAKE,MAAA,WAAW,EAAE,OALf;AAME,MAAA,WAAW,EAAE,IANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AA0BD;;AAlFsC;;AAqFzC,eAAepB,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Upload, Button, Icon, message } from \"antd\";\r\n// import reqwest from \"reqwest\";\r\nimport ImageUploader from \"react-images-upload\";\r\n\r\nclass UploadFile extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false\r\n  };\r\n\r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append(\"files[]\", file);\r\n    });\r\n  };\r\n  // You can use any AJAX library you like\r\n  // reqwest({\r\n  //   url: \"//jsonplaceholder.typicode.com/posts/\",\r\n  //   method: \"post\",\r\n  //   processData: false,\r\n  //   data: formData,\r\n  //   success: () => {\r\n  //     this.setState({\r\n  //       fileList: [],\r\n  //       uploading: false\r\n  //     });\r\n  //     message.success(\"upload successfully.\");\r\n  //   },\r\n  //   error: () => {\r\n  //     this.setState({\r\n  //       uploading: false\r\n  //     });\r\n  //     message.error(\"upload failed.\");\r\n  //   }\r\n  // });\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file]\r\n        }));\r\n        return false;\r\n      },\r\n      fileList\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* <Upload {...props} onChange={this.props.change(fileList)}>\r\n          <Button>\r\n            <Icon type=\"upload\" /> {this.props.textUpload}\r\n          </Button>\r\n        </Upload> */}\r\n        <ImageUploader\r\n          withIcon={true}\r\n          buttonText=\"Choose images\"\r\n          onChange={this.props.change}\r\n          imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n          maxFileSize={5242880}\r\n          singleImage={true}\r\n        />\r\n        {/* <Button\r\n          type=\"primary\"\r\n          onClick={() => this.props.click(fileList)}\r\n          disabled={fileList.length === 0}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {this.props.textButton}\r\n        </Button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadFile;\r\n"]},"metadata":{},"sourceType":"module"}