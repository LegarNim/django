{"ast":null,"code":"var _jsxFileName = \"C:\\\\home\\\\IT\\\\Python\\\\DjangoPractice\\\\front-end\\\\teach-app\\\\src\\\\containers\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, Spin } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n});\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push(\"/\");\n        }\n      });\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, errorMessage, this.props.loading ? React.createElement(Spin, {\n      indicator: antIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) : React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, getFieldDecorator(\"userName\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Login\"), \"Or\", React.createElement(NavLink, {\n      style: {\n        marginRight: \"10px\"\n      },\n      to: \"/signup/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", \"signup\"))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(Login);\n\nconst mapStateToProps = state => {\n  return {\n    error: state.auth.error,\n    loading: state.auth.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\containers\\Login.js"],"names":["React","Component","Form","Icon","Input","Button","Spin","NavLink","connect","actions","antIcon","fontSize","Login","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","history","push","render","errorMessage","error","message","getFieldDecorator","loading","rules","required","color","marginRight","WrappedNormalLoginForm","create","mapStateToProps","state","auth","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, Spin } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/auth\";\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.onAuth(values.userName, values.password);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = <p>{this.props.error.message}</p>;\r\n    }\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        {errorMessage}\r\n        {this.props.loading ? (\r\n          <Spin indicator={antIcon} />\r\n        ) : (\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator(\"userName\", {\r\n                rules: [\r\n                  { required: true, message: \"Please input your username!\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Username\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  { required: true, message: \"Please input your Password!\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                Login\r\n              </Button>\r\n              Or\r\n              <NavLink style={{ marginRight: \"10px\" }} to=\"/signup/\">\r\n                {\" \"}\r\n                signup\r\n              </NavLink>\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(Login);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.auth.error,\r\n    loading: state.auth.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, password) =>\r\n      dispatch(actions.authLogin(username, password))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedNormalLoginForm);\r\n"]},"metadata":{},"sourceType":"module"}