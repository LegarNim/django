{"ast":null,"code":"var _jsxFileName = \"C:\\\\home\\\\IT\\\\Python\\\\DjangoPractice\\\\front-end\\\\teach-app\\\\src\\\\components\\\\CommentLesson.js\";\nimport React, { Component } from \"react\";\nimport { Comment, Avatar, Form, Button, List, Input } from \"antd\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nconst TextArea = Input.TextArea;\n\nconst CommentList = ({\n  comments\n}) => React.createElement(List, {\n  dataSource: comments,\n  itemLayout: \"horizontal\",\n  renderItem: props => React.createElement(Comment, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n});\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})), React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Add Comment\")));\n\nexport class CommentLesson extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      submitting: false,\n      value: \"\"\n    };\n\n    this.handleSubmit = () => {\n      if (!this.state.value) {\n        return;\n      }\n\n      this.setState({\n        submitting: true\n      });\n      comment = {\n        user: this.props.username,\n        content: this.state.value,\n        lesson: this.props.lessonDetail\n      };\n      console.log(comment);\n      setTimeout(() => {\n        this.setState({\n          submitting: false,\n          value: \"\",\n          comments: [{\n            author: \"Han Solo\",\n            avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n            content: React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, this.state.value),\n            datetime: moment().fromNow()\n          }, ...this.state.comments]\n        });\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          comments = _this$state.comments,\n          submitting = _this$state.submitting,\n          value = _this$state.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.props.token !== null ? React.createElement(Comment, {\n      avatar: React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        alt: \"Han Solo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      content: React.createElement(Editor, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        submitting: submitting,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : null, comments.length > 0 && React.createElement(CommentList, {\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    lessonDetail: state.lessons.lessonDetail\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     getLessonDetail: id => dispatch(getLessonDetail(id))\n//   };\n// };\n\n\nexport default connect(mapStateToProps, null)(CommentLesson);","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\components\\CommentLesson.js"],"names":["React","Component","Comment","Avatar","Form","Button","List","Input","moment","connect","TextArea","CommentList","comments","props","Editor","onChange","onSubmit","submitting","value","CommentLesson","state","handleSubmit","setState","comment","user","username","content","lesson","lessonDetail","console","log","setTimeout","author","avatar","datetime","fromNow","handleChange","e","target","render","token","length","mapStateToProps","auth","lessons"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Comment, Avatar, Form, Button, List, Input } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TextArea = Input.TextArea;\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <List\r\n    dataSource={comments}\r\n    itemLayout=\"horizontal\"\r\n    renderItem={props => <Comment {...props} />}\r\n  />\r\n);\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <div>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        loading={submitting}\r\n        onClick={onSubmit}\r\n        type=\"primary\"\r\n      >\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </div>\r\n);\r\n\r\nexport class CommentLesson extends Component {\r\n  state = {\r\n    comments: [],\r\n    submitting: false,\r\n    value: \"\"\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    if (!this.state.value) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      submitting: true\r\n    });\r\n\r\n    comment = {\r\n      user: this.props.username,\r\n      content: this.state.value,\r\n      lesson: this.props.lessonDetail\r\n    };\r\n\r\n    console.log(comment);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        submitting: false,\r\n        value: \"\",\r\n        comments: [\r\n          {\r\n            author: \"Han Solo\",\r\n            avatar:\r\n              \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n            content: <p>{this.state.value}</p>,\r\n            datetime: moment().fromNow()\r\n          },\r\n          ...this.state.comments\r\n        ]\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { comments, submitting, value } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {this.props.token !== null ? (\r\n          <Comment\r\n            avatar={\r\n              <Avatar\r\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                alt=\"Han Solo\"\r\n              />\r\n            }\r\n            content={\r\n              <Editor\r\n                onChange={this.handleChange}\r\n                onSubmit={this.handleSubmit}\r\n                submitting={submitting}\r\n                value={value}\r\n              />\r\n            }\r\n          />\r\n        ) : null}\r\n\r\n        {comments.length > 0 && <CommentList comments={comments} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    username: state.auth.username,\r\n    lessonDetail: state.lessons.lessonDetail\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getLessonDetail: id => dispatch(getLessonDetail(id))\r\n//   };\r\n// };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CommentLesson);\r\n"]},"metadata":{},"sourceType":"module"}