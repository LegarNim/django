{"ast":null,"code":"import * as actionTypes from \"./actionType\";\nimport axios from \"axios\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const user = {\n        token: res.data.key,\n        username,\n        userId: res.data.user,\n        is_student: res.data.user_type.is_student,\n        is_teacher: res.data.user_type.is_teacher,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2, is_student) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2,\n      is_student,\n      is_teacher: !is_student\n    };\n    axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", user).then(res => {\n      const user = {\n        token: res.data.key,\n        username,\n        userId: res.data.user,\n        is_student,\n        is_teacher: !is_student,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\store\\actions\\auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","user","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","token","data","key","userId","is_student","user_type","is_teacher","expirationDate","Date","getTime","setItem","JSON","stringify","catch","err","authSignup","email","password1","password2","authCheckState","parse","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionType\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = user => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .then(res => {\r\n        const user = {\r\n          token: res.data.key,\r\n          username,\r\n          userId: res.data.user,\r\n          is_student: res.data.user_type.is_student,\r\n          is_teacher: res.data.user_type.is_teacher,\r\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch(authSuccess(user));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (\r\n  username,\r\n  email,\r\n  password1,\r\n  password2,\r\n  is_student\r\n) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    const user = {\r\n      username,\r\n      email,\r\n      password1,\r\n      password2,\r\n      is_student,\r\n      is_teacher: !is_student\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", user)\r\n      .then(res => {\r\n        const user = {\r\n          token: res.data.key,\r\n          username,\r\n          userId: res.data.user,\r\n          is_student,\r\n          is_teacher: !is_student,\r\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\r\n        };\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch(authSuccess(user));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user === undefined || user === null) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(user.expirationDate);\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(user));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}