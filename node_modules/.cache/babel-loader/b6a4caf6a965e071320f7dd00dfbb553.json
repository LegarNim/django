{"ast":null,"code":"var _jsxFileName = \"C:\\\\home\\\\IT\\\\Python\\\\DjangoPractice\\\\front-end\\\\teach-app\\\\src\\\\containers\\\\CreateLesson.js\";\nimport React, { Component } from \"react\";\nimport { Form, Icon, Input, Select, Button } from \"antd\";\nimport UploadFile from \"../components/Upload\";\nimport { connect } from \"react-redux\";\nimport { createLesson } from \"../store/actions/lessons\";\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\nlet FILE = [];\n\nclass CreateLesson extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      thumbnail: null\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          const lesson = {\n            title: values.title,\n            body: values.body,\n            categories: values.tags,\n            thumbnail: FILE,\n            teacher: this.props.username\n          };\n          console.log(lesson);\n          this.props.createLesson(this.props.token, lesson);\n          this.props.history.push(\"/\");\n        }\n      });\n    };\n\n    this.handleUpload = fileList => {\n      const formData = new FormData();\n      fileList.forEach(file => {\n        formData.append(\"files[]\", file);\n        FILE = file;\n      }); // console.log(FILE);\n      // console.log(formData.get(\"files[]\"));\n\n      FILE = fileList.name; // console.log(FILE);\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, getFieldDecorator(\"title\", {\n      rules: [{\n        required: true,\n        message: \"Please input title!\"\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"edit\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, getFieldDecorator(\"body\", {\n      rules: [{\n        required: true,\n        message: \"Please input body text!\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 12,\n      placeholder: \"Body...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, getFieldDecorator(\"tags\", {\n      rules: [{\n        required: true,\n        message: \"Please select languages for your lesson!\",\n        type: \"array\"\n      }]\n    })(React.createElement(Select, {\n      mode: \"multiple\",\n      placeholder: \"Please select languages for your lesson\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"java\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Java\"), React.createElement(Option, {\n      value: \"javascript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"JavaScript\"), React.createElement(Option, {\n      value: \"python\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Python\")))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Create Lesson\"));\n  }\n\n}\n\nconst WrappedNormalLessonForm = Form.create()(CreateLesson);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    error: state.auth.error,\n    loading: state.auth.loading,\n    username: state.auth.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createLesson: (token, lesson) => dispatch(createLesson(token, lesson))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLessonForm);","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\containers\\CreateLesson.js"],"names":["React","Component","Form","Icon","Input","Select","Button","UploadFile","connect","createLesson","TextArea","Option","FILE","CreateLesson","state","thumbnail","handleSubmit","e","preventDefault","props","form","validateFields","err","values","lesson","title","body","categories","tags","teacher","username","console","log","token","history","push","handleUpload","fileList","formData","FormData","forEach","file","append","name","render","getFieldDecorator","rules","required","message","color","type","marginRight","WrappedNormalLessonForm","create","mapStateToProps","auth","error","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Select, Button } from \"antd\";\r\nimport UploadFile from \"../components/Upload\";\r\nimport { connect } from \"react-redux\";\r\nimport { createLesson } from \"../store/actions/lessons\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nlet FILE = [];\r\n\r\nclass CreateLesson extends React.Component {\r\n  state = {\r\n    thumbnail: null\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const lesson = {\r\n          title: values.title,\r\n          body: values.body,\r\n          categories: values.tags,\r\n          thumbnail: FILE,\r\n          teacher: this.props.username\r\n        };\r\n        console.log(lesson);\r\n        this.props.createLesson(this.props.token, lesson);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleUpload = fileList => {\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append(\"files[]\", file);\r\n      FILE = file;\r\n    });\r\n    // console.log(FILE);\r\n    // console.log(formData.get(\"files[]\"));\r\n    FILE = fileList.name;\r\n    // console.log(FILE);\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item>\r\n          {getFieldDecorator(\"title\", {\r\n            rules: [{ required: true, message: \"Please input title!\" }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"edit\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Title\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"body\", {\r\n            rules: [{ required: true, message: \"Please input body text!\" }]\r\n          })(<TextArea rows={12} placeholder=\"Body...\" />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"tags\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please select languages for your lesson!\",\r\n                type: \"array\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select\r\n              mode=\"multiple\"\r\n              placeholder=\"Please select languages for your lesson\"\r\n            >\r\n              <Option value=\"java\">Java</Option>\r\n              <Option value=\"javascript\">JavaScript</Option>\r\n              <Option value=\"python\">Python</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        {/* <Form.Item>\r\n          <UploadFile change={this.handleUpload} textUpload=\"Select Image\" />\r\n        </Form.Item> */}\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ marginRight: \"10px\" }}\r\n        >\r\n          Create Lesson\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLessonForm = Form.create()(CreateLesson);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    error: state.auth.error,\r\n    loading: state.auth.loading,\r\n    username: state.auth.username\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createLesson: (token, lesson) => dispatch(createLesson(token, lesson))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedNormalLessonForm);\r\n"]},"metadata":{},"sourceType":"module"}