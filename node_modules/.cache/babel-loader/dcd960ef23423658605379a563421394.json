{"ast":null,"code":"var _jsxFileName = \"C:\\\\home\\\\IT\\\\Python\\\\DjangoPractice\\\\front-end\\\\teach-app\\\\src\\\\containers\\\\Profile.js\";\nimport React, { Component } from \"react\";\nimport Hoc from \"../hoc/hoc\";\nimport { List, Card, Row, Col, Icon, Avatar, Tag } from \"antd\";\nimport Result from \"../components/Result\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getLessonProfile } from \"../store/actions/lessons\";\nimport TimeAgo from \"timeago-react\";\nimport axios from \"axios\";\nconst Meta = Card.Meta;\nexport class Profile extends Component {\n  componentDidMount() {\n    this.props.getLessonProfile(this.props.match.params.id);\n  }\n\n  getComments(id) {\n    axios.get(\"http://127.0.0.1:8000/getComments/get/?id=\".concat(id)).then(res => {\n      localStorage.setItem(\"commentCount-\".concat(id), res.data.length);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const content = this.props.lessonProfileList.map(post => React.createElement(Col, {\n      span: 10,\n      offset: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.getComments(post.id), React.createElement(Card, {\n      style: {\n        width: 300,\n        marginBottom: \"15px\"\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        src: \"https://cdn-images-1.medium.com/max/1200/0*ngXgBNNdx6iiWP8q.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }),\n      actions: [React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, localStorage.getItem(\"commentCount-\".concat(post.id)), \" \", React.createElement(Icon, {\n        type: \"wechat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(TimeAgo, {\n        datetime: post.timestamp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/lesson/\".concat(post.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"More\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      avatar: React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      title: post.title,\n      description: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, post.body), post.categories.map(v => {\n        return React.createElement(Tag, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, v);\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, console.log(this.props.lessonProfileList), React.createElement(Hoc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Hi \", this.props.username), React.createElement(List, {\n      size: \"large\",\n      dataSource: \"1\",\n      renderItem: a => React.createElement(Result, {\n        key: \"1\",\n        grade: \"80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Your lessons\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    lessonProfileList: state.lessons.lessonProfileList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLessonProfile: id => dispatch(getLessonProfile(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["C:\\home\\IT\\Python\\DjangoPractice\\front-end\\teach-app\\src\\containers\\Profile.js"],"names":["React","Component","Hoc","List","Card","Row","Col","Icon","Avatar","Tag","Result","Link","connect","getLessonProfile","TimeAgo","axios","Meta","Profile","componentDidMount","props","match","params","id","getComments","get","then","res","localStorage","setItem","data","length","catch","err","console","log","render","content","lessonProfileList","map","post","width","marginBottom","getItem","timestamp","title","body","categories","v","username","a","mapStateToProps","state","token","auth","lessons","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Hoc from \"../hoc/hoc\";\r\nimport { List, Card, Row, Col, Icon, Avatar, Tag } from \"antd\";\r\nimport Result from \"../components/Result\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLessonProfile } from \"../store/actions/lessons\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport axios from \"axios\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport class Profile extends Component {\r\n  componentDidMount() {\r\n    this.props.getLessonProfile(this.props.match.params.id);\r\n  }\r\n  getComments(id) {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/getComments/get/?id=${id}`)\r\n      .then(res => {\r\n        localStorage.setItem(`commentCount-${id}`, res.data.length);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    const content = this.props.lessonProfileList.map(post => (\r\n      <Col span={10} offset={2}>\r\n        {this.getComments(post.id)}\r\n        <Card\r\n          style={{ width: 300, marginBottom: \"15px\" }}\r\n          cover={\r\n            <img\r\n              alt=\"example\"\r\n              src=\"https://cdn-images-1.medium.com/max/1200/0*ngXgBNNdx6iiWP8q.png\"\r\n            />\r\n          }\r\n          actions={[\r\n            <span>\r\n              {localStorage.getItem(`commentCount-${post.id}`)}{\" \"}\r\n              <Icon type=\"wechat\" />\r\n            </span>,\r\n            <span>\r\n              <TimeAgo datetime={post.timestamp} />\r\n            </span>,\r\n            <Link to={`/lesson/${post.id}`}>More</Link>\r\n          ]}\r\n        >\r\n          <Meta\r\n            avatar={\r\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            }\r\n            title={post.title}\r\n            description={\r\n              <div>\r\n                <p>{post.body}</p>\r\n                {post.categories.map(v => {\r\n                  return <Tag>{v}</Tag>;\r\n                })}\r\n              </div>\r\n            }\r\n          />\r\n        </Card>\r\n      </Col>\r\n    ));\r\n    return (\r\n      <div>\r\n        {console.log(this.props.lessonProfileList)}\r\n        <Hoc>\r\n          <h1>Hi {this.props.username}</h1>\r\n          <List\r\n            size=\"large\"\r\n            dataSource=\"1\"\r\n            renderItem={a => <Result key=\"1\" grade=\"80\" />}\r\n          />\r\n          <hr />\r\n          <h1>Your lessons</h1>\r\n        </Hoc>\r\n        <Row>{content}</Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    username: state.auth.username,\r\n    lessonProfileList: state.lessons.lessonProfileList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getLessonProfile: id => dispatch(getLessonProfile(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}